diff --git a/.vscode/launch.json b/.vscode/launch.json
new file mode 100644
index 0000000..7e0b687
--- /dev/null
+++ b/.vscode/launch.json
@@ -0,0 +1,50 @@
+{
+    // Use IntelliSense to learn about possible attributes.
+    // Hover to view descriptions of existing attributes.
+    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
+    "version": "0.2.0",
+    "configurations": [
+        {
+            "name": "Python Debugger: Current File with Arguments",
+            "type": "debugpy",
+            "request": "launch",
+            "program": "${file}",
+            "console": "integratedTerminal",
+            "args": "${command:pickArgs}"
+        },
+        {
+            "name": "Train & Debug Thermal GAN VEDAI - 512",
+            "type": "python",
+            "request": "launch",
+            "program": "${workspaceFolder}/train.py",
+            "args": [
+                "--dataset_mode", "VEDAI",
+                "--dataroot", "./datasets/VEDAI",
+                "--name", "thermal_gan_vedai_debug",
+                "--model", "thermal_gan",
+                "--which_model_netG", "unet_512",
+                "--which_model_netD", "unetdiscriminator",
+                "--which_direction", "AtoB",
+                "--input_nc", "3",
+                "--output_nc", "1",
+                "--lambda_A", "100",
+                "--no_lsgan",
+                "--norm", "batch",
+                "--pool_size", "0",
+                "--loadSize", "512",
+                "--fineSize", "512",
+                "--gpu_ids", "0",
+                "--nThreads", "8",
+                "--batchSize", "4",
+                "--save_epoch_freq", "1",
+                "--which_epoch", "latest",
+            ],
+            "console": "integratedTerminal",
+            "justMyCode": true,
+            "env": {
+                "PATH": "/home/brian/miniconda3/envs/infragan/bin:${env:PATH}",
+                "PYTHONPATH": "${workspaceFolder}"
+            }
+        },
+    ],
+}
\ No newline at end of file
diff --git a/.vscode/settings.json b/.vscode/settings.json
new file mode 100644
index 0000000..87c4065
--- /dev/null
+++ b/.vscode/settings.json
@@ -0,0 +1,3 @@
+{
+    "python.defaultInterpreterPath": "/home/brian/miniconda3/envs/infragan/bin/python"
+}
\ No newline at end of file
diff --git a/.vscode/tasks.json b/.vscode/tasks.json
new file mode 100644
index 0000000..c417310
--- /dev/null
+++ b/.vscode/tasks.json
@@ -0,0 +1,123 @@
+{
+    "version": "2.0.0",
+    "tasks": [
+        {
+            "label": "Start Visdom Server",
+            "type": "shell",
+            "command": "python",
+            "args": [
+                "-m",
+                "visdom.server"
+            ],
+            "isBackground": true,
+            "problemMatcher": [],
+            "options": {
+                "cwd": "${workspaceFolder}"
+            },
+            "runOptions": {
+                "runOn": "folderOpen"
+            }
+        },
+        {
+            "label": "Train Thermal GAN VEDAI - 512",
+            "type": "shell",
+            "command": "python",
+            "args": [
+                "${workspaceFolder}/train.py",
+                "--dataset_mode", "VEDAI",
+                "--dataroot", "./datasets/VEDAI",
+                "--name", "thermal_gan_vedai2",
+                "--model", "thermal_gan",
+                "--which_model_netG", "unet_512",
+                "--which_model_netD", "unetdiscriminator",
+                "--which_direction", "AtoB",
+                "--input_nc", "3",
+                "--output_nc", "1",
+                "--lambda_A", "100",
+                "--no_lsgan",
+                "--norm", "batch",
+                "--pool_size", "0",
+                "--loadSize", "512",
+                "--fineSize", "512",
+                "--gpu_ids", "0",
+                "--nThreads", "8",
+                "--batchSize", "4",
+                "--save_epoch_freq", "1",
+                "--which_epoch", "latest",
+            ],
+            "options": {
+                "env": {
+                    "PATH": "/home/brian/miniconda3/envs/infragan/bin:${env:PATH}",
+                    "PYTHONPATH": "${workspaceFolder}"
+                }
+            },
+            "problemMatcher": []
+        },
+        
+        {
+            "label": "Evaluate Thermal GAN VEDAI",
+            "type": "shell",
+            "command": "python",
+            "args": [
+                "${workspaceFolder}/evaluate.py",
+                "--dataset_mode", "VEDAI",
+                "--dataroot", "./datasets/VEDAI",
+                "--name", "thermal_gan_vedai",
+                "--model", "thermal_gan",
+                "--which_model_netG", "unet_512",
+                "--which_model_netD", "unetdiscriminator",
+                "--which_direction", "AtoB",
+                "--input_nc", "3",
+                "--output_nc", "1",
+                "--lambda_A", "100",
+                "--no_lsgan",
+                "--norm", "batch",
+                "--pool_size", "0",
+                "--loadSize", "512",
+                "--fineSize", "512",
+                "--gpu_ids", "0",
+                "--nThreads", "8",
+                "--batchSize", "4",
+                "--continue_train", "False",
+                "--which_epoch", "latest",
+                "--results_dir", "./results/thermal_gan_vedai/",
+            ],
+            "options": {
+                "env": {
+                    "PATH": "/home/brian/miniconda3/envs/infragan/bin:${env:PATH}",
+                    "PYTHONPATH": "${workspaceFolder}"
+                }
+            },
+            "problemMatcher": []
+        },
+        
+        {
+            "label": "Train Thermal GAN VEDAI with Visdom Server",
+            "dependsOn": [
+                "Start Visdom Server",
+                "Train Thermal GAN VEDAI - 512"
+            ],
+            "dependsOrder": "parallel"
+        },
+
+    ],
+
+
+
+
+    "problemMatchers": [
+        {
+            "name": "python",
+            "owner": "python",
+            "fileLocation": ["relative", "${workspaceFolder}"],
+            "pattern": {
+                "regexp": "^(.*):(\\d+):(\\d+):\\s*(error|warning):\\s*(.*)$",
+                "file": 1,
+                "line": 2,
+                "column": 3,
+                "severity": 4,
+                "message": 5
+            }
+        }
+    ]
+}
\ No newline at end of file
diff --git a/environment.yml b/environment.yml
new file mode 100644
index 0000000..b61f7e5
--- /dev/null
+++ b/environment.yml
@@ -0,0 +1,159 @@
+name: infragan
+channels:
+  - pytorch
+  - nvidia
+  - defaults
+dependencies:
+  - _libgcc_mutex=0.1=main
+  - _openmp_mutex=5.1=1_gnu
+  - blas=1.0=mkl
+  - brotli-python=1.0.9=py312h6a678d5_8
+  - bzip2=1.0.8=h5eee18b_6
+  - ca-certificates=2024.3.11=h06a4308_0
+  - certifi=2024.6.2=py312h06a4308_0
+  - cuda-cudart=11.8.89=0
+  - cuda-cupti=11.8.87=0
+  - cuda-libraries=11.8.0=0
+  - cuda-nvrtc=11.8.89=0
+  - cuda-nvtx=11.8.86=0
+  - cuda-runtime=11.8.0=0
+  - cuda-version=12.5=3
+  - expat=2.6.2=h6a678d5_0
+  - ffmpeg=4.3=hf484d3e_0
+  - filelock=3.13.1=py312h06a4308_0
+  - freetype=2.12.1=h4a9f257_0
+  - gmp=6.2.1=h295c915_3
+  - gnutls=3.6.15=he1e5248_0
+  - idna=3.7=py312h06a4308_0
+  - intel-openmp=2023.1.0=hdb19cb5_46306
+  - jinja2=3.1.4=py312h06a4308_0
+  - jpeg=9e=h5eee18b_1
+  - lame=3.100=h7b6447c_0
+  - lcms2=2.12=h3be6417_0
+  - ld_impl_linux-64=2.38=h1181459_1
+  - lerc=3.0=h295c915_0
+  - libcublas=11.11.3.6=0
+  - libcufft=10.9.0.58=0
+  - libcufile=1.10.0.4=0
+  - libcurand=10.3.6.39=0
+  - libcusolver=11.4.1.48=0
+  - libcusparse=11.7.5.86=0
+  - libdeflate=1.17=h5eee18b_1
+  - libffi=3.4.4=h6a678d5_1
+  - libgcc-ng=11.2.0=h1234567_1
+  - libgomp=11.2.0=h1234567_1
+  - libiconv=1.16=h5eee18b_3
+  - libidn2=2.3.4=h5eee18b_0
+  - libjpeg-turbo=2.0.0=h9bf148f_0
+  - libnpp=11.8.0.86=0
+  - libnvjpeg=11.9.0.86=0
+  - libpng=1.6.39=h5eee18b_0
+  - libstdcxx-ng=11.2.0=h1234567_1
+  - libtasn1=4.19.0=h5eee18b_0
+  - libtiff=4.5.1=h6a678d5_0
+  - libunistring=0.9.10=h27cfd23_0
+  - libuuid=1.41.5=h5eee18b_0
+  - libwebp-base=1.3.2=h5eee18b_0
+  - llvm-openmp=14.0.6=h9e868ea_0
+  - lz4-c=1.9.4=h6a678d5_1
+  - mkl=2023.1.0=h213fc3f_46344
+  - mkl-service=2.4.0=py312h5eee18b_1
+  - mkl_fft=1.3.8=py312h5eee18b_0
+  - mkl_random=1.2.4=py312hdb19cb5_0
+  - mpmath=1.3.0=py312h06a4308_0
+  - ncurses=6.4=h6a678d5_0
+  - nettle=3.7.3=hbbd107a_1
+  - numpy=1.26.4=py312hc5e2394_0
+  - numpy-base=1.26.4=py312h0da6c21_0
+  - openh264=2.1.1=h4ff587b_0
+  - openjpeg=2.4.0=h3ad879b_0
+  - openssl=3.0.14=h5eee18b_0
+  - pillow=10.3.0=py312h5eee18b_0
+  - pip=24.0=py312h06a4308_0
+  - pysocks=1.7.1=py312h06a4308_0
+  - python=3.12.3=h996f2a0_1
+  - pytorch=2.3.1=py3.12_cuda11.8_cudnn8.7.0_0
+  - pytorch-cuda=11.8=h7e8668a_5
+  - pytorch-mutex=1.0=cuda
+  - pyyaml=6.0.1=py312h5eee18b_0
+  - readline=8.2=h5eee18b_0
+  - setuptools=69.5.1=py312h06a4308_0
+  - sqlite=3.45.3=h5eee18b_0
+  - sympy=1.12=py312h06a4308_0
+  - tbb=2021.8.0=hdb19cb5_0
+  - tk=8.6.14=h39e8969_0
+  - torchvision=0.18.1=py312_cu118
+  - typing_extensions=4.11.0=py312h06a4308_0
+  - urllib3=2.2.1=py312h06a4308_0
+  - wheel=0.43.0=py312h06a4308_0
+  - xz=5.4.6=h5eee18b_1
+  - yaml=0.2.5=h7b6447c_0
+  - zlib=1.2.13=h5eee18b_1
+  - zstd=1.5.5=hc292b87_2
+  - pip:
+      - absl-py==2.1.0
+      - astunparse==1.6.3
+      - cachetools==5.3.3
+      - chardet==5.2.0
+      - charset-normalizer==3.3.2
+      - contourpy==1.2.1
+      - cycler==0.12.1
+      - decorator==5.1.1
+      - dominate==2.9.1
+      - flatbuffers==24.3.25
+      - fonttools==4.53.0
+      - future==1.0.0
+      - gast==0.5.4
+      - google-pasta==0.2.0
+      - grpcio==1.64.1
+      - h5py==3.11.0
+      - imageio==2.34.1
+      - jsonpatch==1.33
+      - jsonpointer==3.0.0
+      - keras==3.3.3
+      - keras-preprocessing==1.1.2
+      - kiwisolver==1.4.5
+      - lazy-loader==0.4
+      - libclang==18.1.1
+      - markdown==3.6
+      - markdown-it-py==3.0.0
+      - markupsafe==2.1.5
+      - matplotlib==3.9.0
+      - mdurl==0.1.2
+      - ml-dtypes==0.3.2
+      - namex==0.0.8
+      - networkx==3.3
+      - oauthlib==3.2.2
+      - olefile==0.47
+      - opencv-python==4.10.0.82
+      - opt-einsum==3.3.0
+      - optree==0.11.0
+      - packaging==24.1
+      - pandas==2.2.2
+      - protobuf==4.25.3
+      - pygments==2.18.0
+      - pyparsing==3.1.2
+      - python-dateutil==2.9.0.post0
+      - pytz==2024.1
+      - pyzmq==26.0.3
+      - requests==2.32.3
+      - rich==13.7.1
+      - scikit-image==0.23.2
+      - scipy==1.13.1
+      - six==1.16.0
+      - tensorboard==2.16.2
+      - tensorboard-data-server==0.7.2
+      - tensorboard-plugin-wit==1.8.1
+      - tensorflow==2.16.1
+      - tensorflow-estimator==2.15.0
+      - termcolor==2.4.0
+      - tifffile==2024.5.22
+      - torchfile==0.1.0
+      - tornado==6.4.1
+      - tqdm==4.66.4
+      - typing-extensions==4.12.2
+      - tzdata==2024.1
+      - visdom==0.1.8.9
+      - websocket-client==1.8.0
+      - werkzeug==3.0.3
+      - wrapt==1.16.0
diff --git a/evaluate.py b/evaluate.py
index 36f1573..6b6e116 100644
--- a/evaluate.py
+++ b/evaluate.py
@@ -77,7 +77,7 @@ model = create_model(opt)
 # test
 mssim_obj = MSSSIM(channel=1)
 ssim_obj = SSIM()
-lpips_obj = LPIPS()
+lpips_obj = LPIPS(pretrained=False)
 L1_obj = torch.nn.L1Loss()
 metrics = {}
 visualize = False
diff --git a/models/networks.py b/models/networks.py
index 66f9e9f..2e89af9 100644
--- a/models/networks.py
+++ b/models/networks.py
@@ -187,6 +187,9 @@ class GANLoss(nn.Module):
             self.loss = nn.BCELoss()
 
     def get_target_tensor(self, input, target_is_real):
+        if isinstance(input, tuple):
+            input = input[0]
+ 
         target_tensor = None
         if target_is_real:
             create_label = ((self.real_label_var is None) or
@@ -206,6 +209,8 @@ class GANLoss(nn.Module):
 
     def __call__(self, input, target_is_real):
         target_tensor = self.get_target_tensor(input, target_is_real)
+        if isinstance(input, tuple):
+            input = input[0]
         return self.loss(input, target_tensor)
 
 
diff --git a/thermalgan input options.md b/thermalgan input options.md
new file mode 100644
index 0000000..4cd3ed2
--- /dev/null
+++ b/thermalgan input options.md	
@@ -0,0 +1,20 @@
+### Train Infragan on VEDAI dataset:
+```bash
+python train.py --dataset_mode VEDAI --dataroot ./datasets/VEDAI --name infragan_vedai --model infragan --which_model_netG unet_512 --which_model_netD unetdiscriminator --which_direction AtoB --input_nc 3 --output_nc 1 --lambda_A 100 --no_lsgan --norm batch --pool_size 0 --loadSize 512 --fineSize 512 --gpu_ids 0 --nThreads 8 --batchSize 4 --save_epoch_freq 1
+```
+
+### Train ThermalGAN model on VEDAI dataset:
+```bash
+python train.py --dataset_mode VEDAI --dataroot ./datasets/VEDAI --name thermal_gan_vedai --model thermal_gan --which_model_netG unet_512 --which_model_netD unetdiscriminator --which_direction AtoB --input_nc 3 --output_nc 1 --lambda_A 100 --no_lsgan --norm batch --pool_size 0 --loadSize 512 --fineSize 512 --gpu_ids 0 --nThreads 8 --batchSize 4 --save_epoch_freq 1
+```
+
+### Evaluate ThermalGAN model on VEDAI dataset:
+```bash
+python evaluate.py --dataset_mode VEDAI --dataroot ./datasets/VEDAI --name thermal_gan_vedai --model thermal_gan --which_model_netG unet_512 --which_model_netD unetdiscriminator --which_direction AtoB --input_nc 3 --output_nc 1 --lambda_A 100 --no_lsgan --norm batch --pool_size 0 --loadSize 512 --fineSize 512 --gpu_ids 0 --nThreads 8 --batchSize 4 --continue_train False --which_epoch latest --results_dir ./results/thermal_gan_vedai/ 
+```
+
+
+### Test ThermalGAN model on VEDAI dataset (not working)
+```bash
+python test.py --dataset_mode VEDAI --dataroot ./datasets/VEDAI --name thermal_gan_vedai --model thermal_gan --which_model_netG unet_512 --which_model_netD unetdiscriminator --which_direction AtoB --input_nc 3 --output_nc 1 --lambda_A 100 --no_lsgan --norm batch --pool_size 0 --loadSize 512 --fineSize 512 --gpu_ids 0 --nThreads 8 --batchSize 4 --continue_train False --which_epoch latest --results_dir ./results/thermal_gan_vedai/ --phase test
+```
\ No newline at end of file
